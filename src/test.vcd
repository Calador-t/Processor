$date
	Sat Jan 11 18:45:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module processor_tb $end
$var wire 1 ! a_enable $end
$var wire 1 " d_enable $end
$var wire 32 # data [31:0] $end
$var wire 1 $ enable_inc $end
$var wire 1 % enable_pc $end
$var wire 1 & f_enable $end
$var wire 1 ' m1_enable $end
$var wire 1 ( m2_enable $end
$var wire 1 ) m3_enable $end
$var wire 1 * m4_enable $end
$var wire 1 + m5_enable $end
$var wire 1 , reset_pc $end
$var wire 1 - t_nop $end
$var wire 1 . t_w $end
$var wire 2 / stld_size [1:0] $end
$var wire 5 0 m5_tail [4:0] $end
$var wire 32 1 m5_res [31:0] $end
$var wire 5 2 m5_r_d_a [4:0] $end
$var wire 32 3 m5_pc [31:0] $end
$var wire 1 4 m5_nop $end
$var wire 5 5 m4_tail [4:0] $end
$var wire 5 6 m4_r_d_a [4:0] $end
$var wire 32 7 m4_r_b [31:0] $end
$var wire 32 8 m4_r_a [31:0] $end
$var wire 32 9 m4_pc [31:0] $end
$var wire 1 : m4_nop $end
$var wire 5 ; m3_tail [4:0] $end
$var wire 5 < m3_r_d_a [4:0] $end
$var wire 32 = m3_r_b [31:0] $end
$var wire 32 > m3_r_a [31:0] $end
$var wire 32 ? m3_pc [31:0] $end
$var wire 1 @ m3_nop $end
$var wire 5 A m2_tail [4:0] $end
$var wire 5 B m2_r_d_a [4:0] $end
$var wire 32 C m2_r_b [31:0] $end
$var wire 32 D m2_r_a [31:0] $end
$var wire 32 E m2_pc [31:0] $end
$var wire 1 F m2_nop $end
$var wire 5 G m1_tail [4:0] $end
$var wire 5 H m1_r_d_a [4:0] $end
$var wire 32 I m1_r_b [31:0] $end
$var wire 32 J m1_r_a [31:0] $end
$var wire 32 K m1_pc [31:0] $end
$var wire 1 L m1_nop $end
$var wire 1 M f_wait_for_cache $end
$var wire 5 N f_tail_ctr [4:0] $end
$var wire 5 O f_tail [4:0] $end
$var wire 32 P f_pc [31:0] $end
$var wire 1 Q f_nop $end
$var wire 32 R f_instr [31:0] $end
$var wire 5 S f_exception [4:0] $end
$var wire 1 T d_w $end
$var wire 5 U d_tail [4:0] $end
$var wire 32 V d_r_d_a_val [31:0] $end
$var wire 5 W d_r_d_a [4:0] $end
$var wire 32 X d_r_b [31:0] $end
$var wire 32 Y d_r_a [31:0] $end
$var wire 32 Z d_pc [31:0] $end
$var wire 1 [ d_nop $end
$var wire 1 \ d_is_store $end
$var wire 1 ] d_is_load $end
$var wire 7 ^ d_func [6:0] $end
$var wire 5 _ d_exception [4:0] $end
$var wire 1 ` clk $end
$var wire 1 a c_w $end
$var wire 1 b c_swap_rm4 $end
$var wire 32 c c_res [31:0] $end
$var wire 5 d c_r_d_a [4:0] $end
$var wire 32 e c_pc [31:0] $end
$var wire 1 f c_nop $end
$var wire 5 g c_exception [4:0] $end
$var wire 1 h a_w $end
$var wire 5 i a_tail [4:0] $end
$var wire 1 j a_swap_rm4 $end
$var wire 2 k a_stld_size [1:0] $end
$var wire 32 l a_res [31:0] $end
$var wire 32 m a_r_d_a_val [31:0] $end
$var wire 5 n a_r_d_a [4:0] $end
$var wire 32 o a_pc [31:0] $end
$var wire 1 p a_nop $end
$var wire 1 q a_jump $end
$var wire 1 r a_is_store $end
$var wire 1 s a_is_load $end
$var wire 5 t a_exception [4:0] $end
$var reg 128 u __dmem_in_d_buffer [127:0] $end
$var reg 33 v __dmem_r_a_buffer [32:0] $end
$var reg 33 w __dmem_w_a_buffer [32:0] $end
$var reg 1 x __dwrite_or_read $end
$var reg 33 y __imem_a_buffer [32:0] $end
$var reg 1 z __iwrite_or_read $end
$var reg 5 { a_exception_in [4:0] $end
$var reg 1 | a_jump_in $end
$var reg 1 } a_nop_in $end
$var reg 32 ~ a_res_in [31:0] $end
$var reg 1 !" a_swap_rm4_in $end
$var reg 1 "" a_wait $end
$var reg 1 #" c_enable $end
$var reg 5 $" c_exception_in [4:0] $end
$var reg 1 %" c_nop_in $end
$var reg 32 &" c_res_in [31:0] $end
$var reg 1 '" c_wait $end
$var reg 1 (" cache_finished $end
$var reg 32 )" d_addr [31:0] $end
$var reg 5 *" d_exception_in [4:0] $end
$var reg 7 +" d_func_in [6:0] $end
$var reg 1 ," d_is_load_in $end
$var reg 1 -" d_is_store_in $end
$var reg 1 ." d_nop_in $end
$var reg 32 /" d_r_a_in [31:0] $end
$var reg 32 0" d_r_b_in [31:0] $end
$var reg 5 1" d_r_d_a_in [4:0] $end
$var reg 32 2" d_r_d_a_val_in [31:0] $end
$var reg 1 3" d_w_in $end
$var reg 1 4" d_wait $end
$var reg 1 5" dcache_read $end
$var reg 1 6" dhit $end
$var reg 1 7" dmem_finished $end
$var reg 128 8" dmem_in_data [127:0] $end
$var reg 33 9" dmem_r_address [32:0] $end
$var reg 1 :" dmem_read $end
$var reg 33 ;" dmem_w_address [32:0] $end
$var reg 1 <" dmem_write $end
$var reg 32 =" drm0 [31:0] $end
$var reg 32 >" drm1 [31:0] $end
$var reg 1 ?" dtlb_miss $end
$var reg 1 @" dtlb_read $end
$var reg 6 A" dtlb_tail [5:0] $end
$var reg 32 B" dtlb_va [31:0] $end
$var reg 20 C" dtlb_valids [19:0] $end
$var reg 1 D" dtlb_wait $end
$var reg 5 E" f_exception_in [4:0] $end
$var reg 32 F" f_instr_in [31:0] $end
$var reg 1 G" f_nop_in $end
$var reg 1 H" f_rob_full $end
$var reg 5 I" f_tail_ctr_in [4:0] $end
$var reg 1 J" f_wait $end
$var reg 1 K" f_wait_for_cache_in $end
$var reg 1 L" hit $end
$var reg 32 M" iaddr [31:0] $end
$var reg 1 N" icache_read $end
$var reg 1 O" icache_write $end
$var reg 33 P" imem_address [32:0] $end
$var reg 1 Q" imem_finished $end
$var reg 1 R" imem_read $end
$var reg 32 S" in_data [31:0] $end
$var reg 33 T" irm0 [32:0] $end
$var reg 33 U" irm1 [32:0] $end
$var reg 1 V" itlb_hit $end
$var reg 1 W" itlb_miss $end
$var reg 1 X" itlb_read $end
$var reg 6 Y" itlb_tail [5:0] $end
$var reg 32 Z" itlb_va [31:0] $end
$var reg 20 [" itlb_valids [19:0] $end
$var reg 1 \" itlb_wait $end
$var reg 1 ]" m1_nop_in $end
$var reg 32 ^" m1_pc_in [31:0] $end
$var reg 32 _" m1_r_a_in [31:0] $end
$var reg 32 `" m1_r_b_in [31:0] $end
$var reg 1 a" m1_wait $end
$var reg 1 b" m2_wait $end
$var reg 1 c" m3_wait $end
$var reg 1 d" m4_wait $end
$var reg 32 e" m5_res_in [31:0] $end
$var reg 1 f" m5_wait $end
$var reg 1 g" mem_reset $end
$var reg 128 h" out_dmem [127:0] $end
$var reg 128 i" out_imem [127:0] $end
$var reg 32 j" page_table_root_addr [31:0] $end
$var reg 1 k" page_walking_dtlb $end
$var reg 1 l" page_walking_itlb $end
$var reg 32 m" pc [31:0] $end
$var reg 32 n" pc_in [31:0] $end
$var reg 1 o" pc_jump $end
$var reg 1 p" reset $end
$var reg 1 q" rgs_enable $end
$var reg 32 r" rm0 [31:0] $end
$var reg 32 s" rm1 [31:0] $end
$var reg 1 t" rm4 $end
$var reg 5 u" rob_head [4:0] $end
$var reg 2 v" stld_size_in [1:0] $end
$var reg 20 w" va_to_pa [19:0] $end
$var reg 1 x" was_reseted $end
$var integer 32 y" dread_cycles [31:0] $end
$var integer 32 z" dwrite_cycles [31:0] $end
$var integer 32 {" i [31:0] $end
$var integer 32 |" iwait_cycles [31:0] $end
$scope function calc_func $end
$var reg 7 }" op [6:0] $end
$upscope $end
$scope function needs_write $end
$var reg 6 ~" op [5:0] $end
$upscope $end
$scope function try_bypass $end
$var reg 5 !# adr [4:0] $end
$upscope $end
$scope module clk_gen $end
$var reg 1 ` clk $end
$upscope $end
$scope module f_instr_ff $end
$var wire 1 ` clk $end
$var wire 1 & enable $end
$var wire 32 "# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 ## out [31:0] $end
$upscope $end
$scope module ff_a_exception $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 5 $# in [4:0] $end
$var reg 5 %# out [4:0] $end
$upscope $end
$scope module ff_a_is_load $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 1 ] in $end
$var reg 1 s out $end
$upscope $end
$scope module ff_a_is_store $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 1 \ in $end
$var reg 1 r out $end
$upscope $end
$scope module ff_a_jump $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 | in $end
$var wire 1 p" reset $end
$var reg 1 q out $end
$upscope $end
$scope module ff_a_nop $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 &# in $end
$var wire 1 p" reset $end
$var reg 1 p out $end
$upscope $end
$scope module ff_a_pc $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 32 '# in [31:0] $end
$var reg 32 (# out [31:0] $end
$upscope $end
$scope module ff_a_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 5 )# in [4:0] $end
$var reg 5 *# out [4:0] $end
$upscope $end
$scope module ff_a_r_d_a_val $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 32 +# in [31:0] $end
$var reg 32 ,# out [31:0] $end
$upscope $end
$scope module ff_a_res $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 32 -# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 .# out [31:0] $end
$upscope $end
$scope module ff_a_stld_size $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 p" reset $end
$var wire 2 /# in [1:0] $end
$var reg 2 0# out [1:0] $end
$upscope $end
$scope module ff_a_swap_rm4 $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 !" in $end
$var wire 1 p" reset $end
$var reg 1 j out $end
$upscope $end
$scope module ff_a_tail $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 5 1# in [4:0] $end
$var reg 5 2# out [4:0] $end
$upscope $end
$scope module ff_a_w $end
$var wire 1 ` clk $end
$var wire 1 ! enable $end
$var wire 1 p" reset $end
$var wire 1 T in $end
$var reg 1 h out $end
$upscope $end
$scope module ff_c_exception $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 5 3# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 4# out [4:0] $end
$upscope $end
$scope module ff_c_nop $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 1 5# in $end
$var wire 1 p" reset $end
$var reg 1 f out $end
$upscope $end
$scope module ff_c_pc $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 32 6# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 7# out [31:0] $end
$upscope $end
$scope module ff_c_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 5 8# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 9# out [4:0] $end
$upscope $end
$scope module ff_c_res $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 32 :# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 ;# out [31:0] $end
$upscope $end
$scope module ff_c_swap_rm4 $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 1 j in $end
$var wire 1 p" reset $end
$var reg 1 b out $end
$upscope $end
$scope module ff_c_w $end
$var wire 1 ` clk $end
$var wire 1 #" enable $end
$var wire 1 . in $end
$var wire 1 p" reset $end
$var reg 1 a out $end
$upscope $end
$scope module ff_d_exception $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 p" reset $end
$var wire 5 <# in [4:0] $end
$var reg 5 =# out [4:0] $end
$upscope $end
$scope module ff_d_func $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 7 ># in [6:0] $end
$var wire 1 p" reset $end
$var reg 7 ?# out [6:0] $end
$upscope $end
$scope module ff_d_is_load $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 ," in $end
$var wire 1 p" reset $end
$var reg 1 ] out $end
$upscope $end
$scope module ff_d_is_store $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 -" in $end
$var wire 1 p" reset $end
$var reg 1 \ out $end
$upscope $end
$scope module ff_d_nop $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 @# in $end
$var wire 1 p" reset $end
$var reg 1 [ out $end
$upscope $end
$scope module ff_d_pc $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 p" reset $end
$var wire 32 A# in [31:0] $end
$var reg 32 B# out [31:0] $end
$upscope $end
$scope module ff_d_r_a $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 32 C# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 D# out [31:0] $end
$upscope $end
$scope module ff_d_r_b $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 32 E# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 F# out [31:0] $end
$upscope $end
$scope module ff_d_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 5 G# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 H# out [4:0] $end
$upscope $end
$scope module ff_d_r_d_a_val $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 32 I# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 J# out [31:0] $end
$upscope $end
$scope module ff_d_tail $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 p" reset $end
$var wire 5 K# in [4:0] $end
$var reg 5 L# out [4:0] $end
$upscope $end
$scope module ff_d_w $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 1 3" in $end
$var wire 1 p" reset $end
$var reg 1 T out $end
$upscope $end
$scope module ff_f_exception $end
$var wire 1 ` clk $end
$var wire 1 & enable $end
$var wire 5 M# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 N# out [4:0] $end
$upscope $end
$scope module ff_f_nop $end
$var wire 1 ` clk $end
$var wire 1 & enable $end
$var wire 1 G" in $end
$var wire 1 p" reset $end
$var reg 1 Q out $end
$upscope $end
$scope module ff_f_pc $end
$var wire 1 ` clk $end
$var wire 1 $ enable $end
$var wire 32 O# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 P# out [31:0] $end
$upscope $end
$scope module ff_f_tail $end
$var wire 1 ` clk $end
$var wire 1 & enable $end
$var wire 1 p" reset $end
$var wire 5 Q# in [4:0] $end
$var reg 5 R# out [4:0] $end
$upscope $end
$scope module ff_f_tail_ctr $end
$var wire 1 ` clk $end
$var wire 1 & enable $end
$var wire 5 S# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 T# out [4:0] $end
$upscope $end
$scope module ff_f_wait_for_cache $end
$var wire 1 ` clk $end
$var wire 1 & enable $end
$var wire 1 K" in $end
$var wire 1 p" reset $end
$var reg 1 M out $end
$upscope $end
$scope module ff_m1_nop $end
$var wire 1 ` clk $end
$var wire 1 ' enable $end
$var wire 1 ]" in $end
$var wire 1 p" reset $end
$var reg 1 L out $end
$upscope $end
$scope module ff_m1_pc $end
$var wire 1 ` clk $end
$var wire 1 ' enable $end
$var wire 32 U# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 V# out [31:0] $end
$upscope $end
$scope module ff_m1_r_b $end
$var wire 1 ` clk $end
$var wire 1 ' enable $end
$var wire 32 W# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 X# out [31:0] $end
$upscope $end
$scope module ff_m1_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 ' enable $end
$var wire 5 Y# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 Z# out [4:0] $end
$upscope $end
$scope module ff_m1_tail $end
$var wire 1 ` clk $end
$var wire 1 ' enable $end
$var wire 5 [# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 \# out [4:0] $end
$upscope $end
$scope module ff_m2_nop $end
$var wire 1 ` clk $end
$var wire 1 ( enable $end
$var wire 1 L in $end
$var wire 1 p" reset $end
$var reg 1 F out $end
$upscope $end
$scope module ff_m2_pc $end
$var wire 1 ` clk $end
$var wire 1 ( enable $end
$var wire 32 ]# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 ^# out [31:0] $end
$upscope $end
$scope module ff_m2_r_a $end
$var wire 1 ` clk $end
$var wire 1 ( enable $end
$var wire 1 p" reset $end
$var wire 32 _# in [31:0] $end
$var reg 32 `# out [31:0] $end
$upscope $end
$scope module ff_m2_r_b $end
$var wire 1 ` clk $end
$var wire 1 ( enable $end
$var wire 32 a# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 b# out [31:0] $end
$upscope $end
$scope module ff_m2_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 ( enable $end
$var wire 5 c# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 d# out [4:0] $end
$upscope $end
$scope module ff_m2_tail $end
$var wire 1 ` clk $end
$var wire 1 ( enable $end
$var wire 5 e# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 f# out [4:0] $end
$upscope $end
$scope module ff_m3_nop $end
$var wire 1 ` clk $end
$var wire 1 ) enable $end
$var wire 1 F in $end
$var wire 1 p" reset $end
$var reg 1 @ out $end
$upscope $end
$scope module ff_m3_pc $end
$var wire 1 ` clk $end
$var wire 1 ) enable $end
$var wire 32 g# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 h# out [31:0] $end
$upscope $end
$scope module ff_m3_r_a $end
$var wire 1 ` clk $end
$var wire 1 ) enable $end
$var wire 32 i# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 j# out [31:0] $end
$upscope $end
$scope module ff_m3_r_b $end
$var wire 1 ` clk $end
$var wire 1 ) enable $end
$var wire 32 k# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 l# out [31:0] $end
$upscope $end
$scope module ff_m3_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 ) enable $end
$var wire 5 m# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 n# out [4:0] $end
$upscope $end
$scope module ff_m3_tail $end
$var wire 1 ` clk $end
$var wire 1 ) enable $end
$var wire 5 o# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 p# out [4:0] $end
$upscope $end
$scope module ff_m4_nop $end
$var wire 1 ` clk $end
$var wire 1 * enable $end
$var wire 1 @ in $end
$var wire 1 p" reset $end
$var reg 1 : out $end
$upscope $end
$scope module ff_m4_pc $end
$var wire 1 ` clk $end
$var wire 1 * enable $end
$var wire 32 q# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 r# out [31:0] $end
$upscope $end
$scope module ff_m4_r_a $end
$var wire 1 ` clk $end
$var wire 1 * enable $end
$var wire 32 s# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 t# out [31:0] $end
$upscope $end
$scope module ff_m4_r_b $end
$var wire 1 ` clk $end
$var wire 1 * enable $end
$var wire 32 u# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 v# out [31:0] $end
$upscope $end
$scope module ff_m4_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 * enable $end
$var wire 5 w# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 x# out [4:0] $end
$upscope $end
$scope module ff_m4_tail $end
$var wire 1 ` clk $end
$var wire 1 * enable $end
$var wire 5 y# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 z# out [4:0] $end
$upscope $end
$scope module ff_m5_nop $end
$var wire 1 ` clk $end
$var wire 1 + enable $end
$var wire 1 : in $end
$var wire 1 p" reset $end
$var reg 1 4 out $end
$upscope $end
$scope module ff_m5_pc $end
$var wire 1 ` clk $end
$var wire 1 + enable $end
$var wire 32 {# in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 |# out [31:0] $end
$upscope $end
$scope module ff_m5_r_d_a $end
$var wire 1 ` clk $end
$var wire 1 + enable $end
$var wire 5 }# in [4:0] $end
$var wire 1 p" reset $end
$var reg 5 ~# out [4:0] $end
$upscope $end
$scope module ff_m5_r_res $end
$var wire 1 ` clk $end
$var wire 1 + enable $end
$var wire 32 !$ in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 "$ out [31:0] $end
$upscope $end
$scope module ff_m5_tail $end
$var wire 1 ` clk $end
$var wire 1 + enable $end
$var wire 1 p" reset $end
$var wire 5 #$ in [4:0] $end
$var reg 5 $$ out [4:0] $end
$upscope $end
$scope module ff_mx_r_a $end
$var wire 1 ` clk $end
$var wire 1 ' enable $end
$var wire 32 %$ in [31:0] $end
$var wire 1 p" reset $end
$var reg 32 &$ out [31:0] $end
$upscope $end
$scope module ff_stld_size $end
$var wire 1 ` clk $end
$var wire 1 " enable $end
$var wire 2 '$ in [1:0] $end
$var wire 1 p" reset $end
$var reg 2 ($ out [1:0] $end
$upscope $end
$scope begin $unm_blk_130 $end
$var integer 32 )$ j [31:0] $end
$upscope $end
$scope task handle_jump $end
$upscope $end
$scope task new_inst_found $end
$upscope $end
$scope task print_memory $end
$upscope $end
$scope task print_pipeline $end
$upscope $end
$scope task print_rob $end
$upscope $end
$scope task write_to_rob $end
$var reg 32 *$ in_add_miss [31:0] $end
$var reg 5 +$ in_exc [4:0] $end
$var reg 1 ,$ in_jump $end
$var reg 1 -$ in_load $end
$var reg 32 .$ in_pc [31:0] $end
$var reg 5 /$ in_reg [4:0] $end
$var reg 1 0$ in_store $end
$var reg 5 1$ in_tail [4:0] $end
$var reg 32 2$ in_val [31:0] $end
$var reg 1 3$ in_valid $end
$var reg 1 4$ in_write $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x4$
x3$
bx 2$
bx 1$
x0$
bx /$
bx .$
x-$
x,$
bx +$
bx *$
bx )$
bx ($
bx '$
bx &$
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
bx W#
bx V#
bx U#
bx T#
b0 S#
bx R#
bx Q#
bx P#
b1000000000000 O#
bx N#
b0 M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
1@#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
b0z 8#
bx 7#
b0z 6#
x5#
bx 4#
b0 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
1&#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
1x"
b1000000000000000 w"
bx v"
b0 u"
1t"
bx s"
bx r"
0q"
0p"
0o"
b1000000000000 n"
b1000000000000 m"
xl"
xk"
bx j"
bx i"
bx h"
xg"
0f"
bx e"
0d"
0c"
0b"
0a"
bx `"
bx _"
bx ^"
1]"
x\"
bx ["
bx Z"
bx Y"
xX"
xW"
xV"
bx U"
bx T"
b0 S"
xR"
0Q"
bx P"
xO"
0N"
bx M"
xL"
0K"
0J"
b0 I"
0H"
1G"
bx F"
b0 E"
xD"
bx C"
bx B"
bx A"
x@"
x?"
bx >"
bx ="
x<"
bx ;"
x:"
bx 9"
bx 8"
07"
06"
x5"
04"
x3"
bx 2"
bx 1"
bx 0"
bx /"
1."
x-"
x,"
bx +"
b0 *"
bx )"
1("
0'"
bx &"
0%"
b0 $"
1#"
0""
0!"
bx ~
1}
x|
b0 {
0z
bx y
0x
bx w
bx v
bx u
bx t
xs
xr
xq
xp
bx o
bx n
bx m
bx l
bx k
xj
bx i
xh
bx g
xf
bx e
bx d
bx c
xb
xa
0`
bx _
bx ^
x]
x\
x[
bx Z
bx Y
bx X
bx W
bx V
bx U
xT
bx S
bx R
xQ
bx P
bx O
bx N
xM
xL
bx K
bx J
bx I
bx H
bx G
xF
bx E
bx D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
x:
bx 9
bx 8
bx 7
bx 6
bx 5
x4
bx 3
bx 2
bx 1
bx 0
bx /
z.
z-
0,
1+
1*
1)
1(
1'
1&
1%
1$
b0 #
1"
1!
$end
#200
b100010000000 {"
#1000
b0 S
b0 <#
b0 N#
b0 R
b0 ##
b0 P
b0 A#
b0 P#
0Q
b0 O
b0 K#
b0 R#
b0 N
b0 Q#
b0 T#
0M
b0 Z
b0 '#
b0 B#
b0 W
b0 )#
b0 H#
b0 Y#
b0 V
b0 +#
b0 J#
b0 /
b0 /#
b0 ($
0T
0]
0\
b0 ^
b0 ?#
b0 Y
b0 D#
b0 X
b0 F#
b0 U
b0 1#
b0 L#
b0 [#
b0 _
b0 $#
b0 =#
0[
b0 o
b0 (#
b0 n
b0 *#
b0 m
b0 ,#
b0 k
b0 0#
0h
0s
0r
b0 l
b0 .#
0q
b0 i
b0 2#
0p
0j
b0 t
b0 %#
b0 H
b0 Z#
b0 c#
b0 J
b0 _#
b0 &$
b0 I
b0 X#
b0 a#
b0 G
b0 \#
b0 e#
0L
b0 B
b0 d#
b0 m#
b0 D
b0 `#
b0 i#
b0 C
b0 b#
b0 k#
b0 A
b0 f#
b0 o#
0F
b0 <
b0 n#
b0 w#
b0 >
b0 j#
b0 s#
b0 =
b0 l#
b0 u#
b0 ;
b0 p#
b0 y#
0@
b0 6
b0 x#
b0 }#
b0 8
b0 t#
b0 7
b0 v#
b0 5
b0 z#
0:
b0 2
b0 ~#
b0 1
b0 "$
b0 0
b0 #$
b0 $$
04
b0 e
b0 7#
b0 d
b0 9#
0a
b0 c
b0 ;#
0f
0b
b0 g
b0 4#
0G"
b0 s"
b0 r"
0R"
0<"
0:"
05"
b0 C"
0k"
b0 A"
1D"
0?"
b0 >"
b0 ="
b0 ["
0l"
b0 Y"
1\"
0W"
b101000000000000 j"
b111111111111111111111111111111111 U"
b111111111111111111111111111111111 T"
b10010011111111 )$
b11111111111111111111111111111111 |"
b11 {"
1,
1p"
#1010
1G"
#1200
b100000 {"
#2000
0,
0p"
#5000
0x"
0|
0}
xf
bx c
bx ;#
za
b0z d
b0z 9#
b0z e
b0z 7#
bx 1
bx "$
1L
bx I
bx X#
bx a#
bx J
bx _#
bx &$
1p
xq
bx l
bx .#
1[
bx X
bx F#
bx Y
bx D#
bx ^
bx ?#
x\
x]
xT
bx /
bx /#
bx ($
bx V
bx +#
bx J#
bx W
bx )#
bx H#
bx Y#
1Q
b1000000000000 P
b1000000000000 A#
b1000000000000 P#
bx R
bx ##
0G"
b1001 {"
1`
#5020
1X"
b1000000000000 Z"
#5320
1N"
b1000000000000 M"
0X"
#5520
b100000000 y
b0 |"
1R"
b100000000 P"
0$
1G"
1J"
#5530
0N"
#10000
0`
#15000
b1000000000000 Z
b1000000000000 '#
b1000000000000 B#
bx n
bx *#
bx m
bx ,#
bx k
bx 0#
xh
xs
xr
0q
bx H
bx Z#
bx c#
bx D
bx `#
bx i#
bx C
bx b#
bx k#
1F
0G"
b1001 {"
b1 |"
1`
#15010
1K"
1G"
#20000
0`
#25000
1@
bx =
bx l#
bx u#
bx >
bx j#
bx s#
bx B
bx d#
bx m#
b1000000000000 o
b1000000000000 (#
1M
0G"
b1001 {"
b10 |"
1`
#25010
b1100110000000000000000000000000 i"
1G"
#25030
1Q"
b11111111111111111111111111111111 |"
#30000
0`
#35000
bx <
bx n#
bx w#
bx 8
bx t#
bx 7
bx v#
1:
0G"
b1001 {"
1`
#35010
1O"
#35020
b1100110000000000000000000000000 F"
b1100110000000000000000000000000 "#
#35120
b1 I"
b1 S#
0K"
#35130
1$
0O"
0Q"
0J"
0R"
#40000
0`
#45000
b1000000000100 m"
b1000000000100 O#
14
bx 6
bx x#
bx }#
0M
b1 N
b1 Q#
b1 T#
0Q
b1100110000000000000000000000000 R
b1100110000000000000000000000000 ##
b1001 {"
1`
#45020
1X"
b1000000000100 Z"
#45320
b0 F"
b0 "#
1N"
b1000000000100 M"
0X"
#45420
b10 I"
b10 S#
#45430
0N"
#45460
0@#
0."
#45510
b100001 +"
b100001 >#
b110011 }"
#45520
b0 0"
b0 E#
03"
0-"
0,"
b0 1"
b0 G#
b110011 ~"
b0 !#
#50000
0`
#55000
0&#
b0 R
b0 ##
b1000000000100 P
b1000000000100 A#
b1000000000100 P#
b1 O
b1 K#
b1 R#
b10 N
b10 Q#
b10 T#
b0 W
b0 )#
b0 H#
b0 Y#
0T
0]
0\
b100001 ^
b100001 ?#
b0 X
b0 F#
0[
bx 2
bx ~#
b1000000001000 m"
b1000000001000 O#
b1001 {"
1`
#55020
1X"
b1000000001000 Z"
#55320
1N"
b1000000001000 M"
0X"
#55400
b0 ~
b0 -#
#55410
0t"
1@#
1G"
1."
1o"
1|
b0 n"
#55420
b11 I"
b11 S#
#55430
0N"
#55460
0@#
0."
#55510
b0 +"
b0 >#
b0 }"
#55520
bx 0"
bx E#
13"
0$
x&
1@#
b0 ~"
14"
1."
#55910
1,$
00$
0-$
04$
b10 *$
b1000000000000 .$
b0 /$
b0 2$
b0 +$
13$
b0 1$
#60000
0`
#65000
1&#
0o"
b0 m"
b0 O#
b0 H
b0 Z#
b0 c#
0p
1q
b0 l
b0 .#
0r
0s
0h
b0 n
b0 *#
1[
b1 U
b1 1#
b1 L#
b1 [#
bx X
bx F#
b0 ^
b0 ?#
1T
b1000000000100 Z
b1000000000100 '#
b1000000000100 B#
0G"
0|
b1001 {"
1`
#65020
1X"
b0 Z"
#65100
b10 u"
#65101
b0 &"
b0 :#
#65320
0V"
0X"
#65330
b10100 {"
#65340
b1 E"
b1 M#
b0 U"
b0 T"
#65460
1$
1&
0@#
04"
0."
#65520
b0 0"
b0 E#
b0 /"
b0 C#
b1001 {"
#70000
0`
#75000
0&#
b1 S
b1 <#
b1 N#
b0 P
b0 A#
b0 P#
b10 O
b10 K#
b10 R#
b11 N
b11 Q#
b11 T#
b0 Y
b0 D#
b0 X
b0 F#
0[
b1000000000100 o
b1000000000100 (#
1h
0q
b1 i
b1 2#
1p
b1 G
b1 \#
b1 e#
b0 B
b0 d#
b0 m#
b0 c
b0 ;#
b100 m"
b100 O#
b0 E"
b0 M#
b1001 {"
1`
#75020
1X"
b100 Z"
#75320
0X"
#75330
b10100 {"
#75520
bx 0"
bx E#
bx /"
bx C#
0$
x&
1@#
14"
1."
#75540
1G"
#75900
0,$
14$
b11 *$
b1000000000100 .$
b1 1$
#80000
0`
#85000
1&#
b0 <
b0 n#
b0 w#
b1 A
b1 f#
b1 o#
0p
1[
b1 _
b1 $#
b1 =#
b10 U
b10 1#
b10 L#
b10 [#
bx X
bx F#
bx Y
bx D#
b0 Z
b0 '#
b0 B#
0G"
b1001 {"
1`
#85020
1X"
#85100
1G"
#85320
0X"
#85460
1$
1&
0@#
04"
0."
#85520
b0 0"
b0 E#
b0 /"
b0 C#
#90000
0`
#95000
1@#
0&#
b0 S
b0 <#
b0 N#
b100 P
b100 A#
b100 P#
1Q
b11 O
b11 K#
b11 R#
b0 Y
b0 D#
b0 X
b0 F#
0[
b0 o
b0 (#
b10 i
b10 2#
1p
b1 t
b1 %#
b10 G
b10 \#
b10 e#
b1 ;
b1 p#
b1 y#
b0 6
b0 x#
b0 }#
b1000 m"
b1000 O#
0G"
b1001 {"
1`
#95001
b1 $"
b1 3#
#95010
1&#
1}
1."
1G"
#95020
1X"
b1000 Z"
#95320
0X"
#100000
0`
#105000
b1100 m"
b1100 O#
b1 g
b1 4#
b0 2
b0 ~#
b1 5
b1 z#
b10 A
b10 f#
b10 o#
1[
b0 _
b0 $#
b0 =#
b11 U
b11 1#
b11 L#
b11 [#
b100 Z
b100 '#
b100 B#
b1000 P
b1000 A#
b1000 P#
0G"
0}
b1001 {"
1`
#105010
1}
1G"
#105020
1X"
b1100 Z"
#105320
0X"
#110000
0`
#115000
b1100 P
b1100 A#
b1100 P#
b1000 Z
b1000 '#
b1000 B#
b100 o
b100 (#
b11 i
b11 2#
b0 t
b0 %#
b11 G
b11 \#
b11 e#
b10 ;
b10 p#
b10 y#
b10000 m"
b10000 O#
0G"
0}
b1001 {"
1`
#115001
b0 $"
b0 3#
#115020
1X"
b10000 Z"
#115320
0X"
#115330
b10100 {"
#120000
0`
#125000
b10100 m"
b10100 O#
b0 g
b0 4#
b10 5
b10 z#
b11 A
b11 f#
b11 o#
b1000 o
b1000 (#
b1100 Z
b1100 '#
b1100 B#
0Q
b10000 P
b10000 A#
b10000 P#
b1001 {"
1`
#125020
1X"
b10100 Z"
#125320
0X"
#125330
b10100 {"
#125460
0@#
0."
#125520
b1001 {"
#130000
0`
#135000
0&#
b10100 P
b10100 A#
b10100 P#
b10000 Z
b10000 '#
b10000 B#
0[
b1100 o
b1100 (#
b11 ;
b11 p#
b11 y#
b11000 m"
b11000 O#
b1001 {"
1`
#135020
1X"
b11000 Z"
#135320
0X"
#135330
b10100 {"
#135520
bx 0"
bx E#
bx /"
bx C#
0$
x&
1@#
14"
1."
#135900
b10000 .$
b11 1$
#140000
0`
#145000
1&#
b11 5
b11 z#
0p
b10000 o
b10000 (#
1[
bx X
bx F#
bx Y
bx D#
b10100 Z
b10100 '#
b10100 B#
b1001 {"
1`
#145020
1X"
#145320
0X"
#145330
b10100 {"
#145460
1$
1&
0@#
04"
0."
#145520
b0 0"
b0 E#
b0 /"
b0 C#
#150000
0`
#155000
0&#
b11000 P
b11000 A#
b11000 P#
b0 Y
b0 D#
b0 X
b0 F#
0[
b10100 o
b10100 (#
1p
b11100 m"
b11100 O#
b1001 {"
1`
#155020
1X"
b11100 Z"
#155320
0X"
#155330
b10100 {"
#155520
bx 0"
bx E#
bx /"
bx C#
0$
x&
1@#
14"
1."
#155900
b10100 .$
#160000
0`
#165000
1&#
0p
1[
bx X
bx F#
bx Y
bx D#
b11000 Z
b11000 '#
b11000 B#
b1001 {"
1`
#165020
1X"
#165320
0X"
#165330
b10100 {"
#165460
1$
1&
0@#
04"
0."
#165520
b0 0"
b0 E#
b0 /"
b0 C#
#170000
0`
#175000
0&#
b11100 P
b11100 A#
b11100 P#
b0 Y
b0 D#
b0 X
b0 F#
0[
b11000 o
b11000 (#
1p
b100000 m"
b100000 O#
b1001 {"
1`
#175020
1X"
b100000 Z"
#175320
0X"
#175330
b10100 {"
#175520
bx 0"
bx E#
bx /"
bx C#
0$
x&
1@#
14"
1."
#175900
b11000 .$
#180000
0`
#185000
1&#
0p
1[
bx X
bx F#
bx Y
bx D#
b11100 Z
b11100 '#
b11100 B#
b1001 {"
1`
#185020
1X"
#185320
0X"
#185330
b10100 {"
#185460
1$
1&
0@#
04"
0."
#185520
b0 0"
b0 E#
b0 /"
b0 C#
#190000
0`
#195000
0&#
b100000 P
b100000 A#
b100000 P#
b0 Y
b0 D#
b0 X
b0 F#
0[
b11100 o
b11100 (#
1p
b100100 m"
b100100 O#
b1001 {"
1`
#195020
1X"
b100100 Z"
#195320
0X"
#195330
b10100 {"
#195520
bx 0"
bx E#
bx /"
bx C#
0$
x&
1@#
14"
1."
#195900
b11100 .$
#200000
0`
#202000
